# ESP32 Sensor Data Server - Environment Configuration Template
# Copy this file to .env and fill in your actual values

# ======================
# MongoDB Configuration
# ======================

# MongoDB Atlas connection string (required)
# Get this from your MongoDB Atlas cluster dashboard
MONGO_CONNECTION_STRING=mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/?retryWrites=true&w=majority&appName=cluster0

# Database name in MongoDB
MONGO_DATABASE=dadosClima

# Collection name to store sensor data
MONGO_COLLECTION=clima

# ======================
# Server Configuration
# ======================

# Port for the HTTP server (optional, defaults to 3000)
PORT=3000

# Node.js environment (development/production)
NODE_ENV=production

# ======================
# HiveMQ Cloud MQTT Configuration (optional)
# ======================
# These are optional since MQTT config is in the code
# But you can override them here for different environments

# HiveMQ Cloud broker hostname
MQTT_HOST=166d9acce84b47e48593e715d2114d59.s1.eu.hivemq.cloud

# MQTT port (8883 for SSL, 1883 for unsecured)
MQTT_PORT=8883

# HiveMQ Cloud credentials
MQTT_USERNAME=skytrack
MQTT_PASSWORD=123456789Skytrack

# ======================
# AWS Deployment (optional)
# ======================

# AWS region (if using AWS services)
AWS_REGION=us-east-1

# AWS access keys (if needed, better to use IAM roles on EC2)
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key

# ======================
# Security (optional)
# ======================

# API rate limiting (requests per minute)
RATE_LIMIT=1000

# Enable/disable detailed logging
DEBUG_LOGGING=false

# ======================
# Monitoring (optional)
# ======================

# Health check endpoint path
HEALTH_CHECK_PATH=/health

# Application name for logging
APP_NAME=esp32-sensor-server

# Application version
APP_VERSION=1.0.0

# ======================
# Example Values
# ======================
# Remove these before deploying to production!

# Example MongoDB (replace with your real connection)
# MONGO_CONNECTION_STRING=mongodb+srv://user:pass@cluster0.abc123.mongodb.net/?retryWrites=true&w=majority

# Example for local development with Docker
# MONGO_CONNECTION_STRING=mongodb://localhost:27017

# Example for different environments
# NODE_ENV=development  # for local development
# NODE_ENV=staging     # for staging server
# NODE_ENV=production  # for production deployment