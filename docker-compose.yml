# Docker Compose for ESP32 Sensor Data Server
# Use for development and production deployment

version: '3.8'

services:
  sensor-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: production

    image: esp32-sensor-server:latest

    container_name: esp32-sensor-server

    ports:
      - "${PORT:-3000}:3000"

    environment:
      # MongoDB Configuration (from .env file)
      - MONGO_CONNECTION_STRING=${MONGO_CONNECTION_STRING}
      - MONGO_DATABASE=${MONGO_DATABASE:-dadosClima}
      - MONGO_COLLECTION=${MONGO_COLLECTION:-clima}

      # Server Configuration
      - PORT=${PORT:-3000}
      - NODE_ENV=${NODE_ENV:-production}

      # Optional: MQTT Configuration (if using local MQTT broker)
      - MQTT_HOST=${MQTT_HOST:-166d9acce84b47e48593e715d2114d59.s1.eu.hivemq.cloud}
      - MQTT_PORT=${MQTT_PORT:-8883}
      - MQTT_USERNAME=${MQTT_USERNAME:-skytrack}
      - MQTT_PASSWORD=${MQTT_PASSWORD:-123456789Skytrack}

    # Restart policy for production
    restart: unless-stopped

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits for AWS EC2 deployment
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Labels for organization
    labels:
      - "project=esp32-sensors"
      - "service=data-server"
      - "environment=${NODE_ENV:-production}"

# Optional: Add monitoring with Prometheus/Grafana
# Uncomment if you want monitoring on EC2
#
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#    restart: unless-stopped
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3001:3000"
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    restart: unless-stopped

# Network for service communication
networks:
  default:
    name: esp32-sensor-network
    driver: bridge